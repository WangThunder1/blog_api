services:
  db:
    image: postgres
    volumes:
      - db:/var/lib/postgresql/data
      - ./data/db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  backend:
    build: ./blog_api_backend
    command: python manage.py runserver 0.0.0.0:8000
    container_name: blog_api_backend
    volumes:
      - ./blog_api_backend:/code
      - ./data/host:/code/host
      - ./data/static:/code/static
      - type: bind
        source: .env
        target: /code/.env
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - db
      - redis

  celery_worker:
    build: ./blog_api_backend
    command: celery -A blogapi worker -l info
    volumes:
      - ./blog_api_backend:/code
      - ./data/static:/code/static
      - type: bind
        source: .env
        target: /code/.env
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - db
      - redis

  proxy:
    build: ./proxy
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./data/static:/static
    ports:
      - "80:80"
    depends_on:
      - backend

  redis:
    image: redis
    container_name: blog_api_redis
    command: redis-server --appendonly yes 
    volumes:
      - redis:/data


volumes:
  db: {}
  redis: {}

